{
  "name": "typroof",
  "version": "0.4.3",
  "private": true,
  "description": "TypeScript type testing with a fast CLI tool and a smooth WYSIWYG editor experience.",
  "keywords": [
    "typescript",
    "typroof",
    "test",
    "check",
    "static analysis"
  ],
  "homepage": "https://github.com/Snowflyt/typroof",
  "bugs": {
    "url": "https://github.com/Snowflyt/typroof/issues"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/Snowflyt/typroof"
  },
  "license": "MIT",
  "author": "Ge Gao (Snowflyt) <gaoge011022@gmail.com>",
  "type": "module",
  "main": "./index.js",
  "module": "./index.js",
  "types": "./index.d.ts",
  "bin": {
    "typroof": "./cli.js"
  },
  "scripts": {
    "prebuild": "npm run clean",
    "build": "npm run test-types && npm run test && tsc -p tsconfig.build.json && tsc-alias -p tsconfig.build.json && rimraf -g \"dist/tools/**/*.{js,d.ts.map}\" && replace-in-file \"/^\\/\\/# sourceMappingURL=.+$/mg\" \"\" \"dist/tools/**/*.d.ts\" --isRegex && replace-in-file \"/^\\s*\\/\\/ eslint-disable-next-line .+$/mg\" \"\" \"dist/**/*.js\" --isRegex && prettier --log-level=silent --print-width 80 --write \"dist/**/*.{js,d.ts}\" --ignore-path !dist && cpy package.json dist && json -I -f dist/package.json -e \"delete this.private; delete this.scripts; delete this.devDependencies\" && cpy LICENSE dist && cpy README.md dist && node -e \"import { replaceInFileSync } from 'replace-in-file'; import packageJSON from './dist/package.json' with { type: 'json' }; ['docs/screenshot.png'].forEach((path) => replaceInFileSync({ files: 'dist/README.md', from: path, to: 'https://github.com/Snowflyt/typroof/blob/v' + packageJSON['version'] + '/' + path }))\"",
    "clean": "rimraf dist",
    "format": "prettier --no-error-on-unmatched-pattern --write {src,test}/**/*.{js,ts,json} *.{js,cjs,mjs,ts,cts,mts,json,md}",
    "lint": "eslint {src,test}/**/*.{js,ts} *.{js,cjs,mjs,ts,cts,mts} --no-error-on-unmatched-pattern --report-unused-disable-directives-severity error --max-warnings 0",
    "lint:fix": "eslint --fix {src,test}/**/*.{js,ts} *.{js,cjs,mjs,ts,cts,mts} --no-error-on-unmatched-pattern --report-unused-disable-directives-severity error --max-warnings 0",
    "prepare": "node -e \"import fs from 'fs'; import path from 'path'; const hooksDir = path.join(process.cwd(), '.githooks'); const gitHooksDir = path.join(process.cwd(), '.git/hooks'); if (!fs.existsSync(gitHooksDir)) { console.error('Git hooks directory not found, please run this in a git repository.'); process.exit(1); } fs.readdirSync(hooksDir).forEach(file => { const srcFile = path.join(hooksDir, file); const destFile = path.join(gitHooksDir, file); fs.copyFileSync(srcFile, destFile); if (process.platform !== 'win32' && !file.endsWith('.cmd')) { fs.chmodSync(destFile, 0o755); } })\"",
    "test": "vitest run",
    "test-types": "tsx src/cli.ts",
    "test:cov": "vitest run --coverage",
    "test:ui": "vitest --ui --coverage.enabled=true",
    "test:watch": "vitest",
    "test:watch-cov": "vitest --coverage",
    "typecheck": "tsc --noEmit"
  },
  "dependencies": {
    "esbuild": "^0.25.1",
    "get-tsconfig": "^4.10.0",
    "meow": "^13.2.0",
    "tinyglobby": "^0.2.12"
  },
  "devDependencies": {
    "@commitlint/cli": "^19.8.0",
    "@types/node": "^22.13.10",
    "@typescript-eslint/parser": "^8.26.1",
    "@vitest/coverage-v8": "^3.0.9",
    "@vitest/ui": "^3.0.9",
    "cpy-cli": "^5.0.0",
    "eslint": "^9.22.0",
    "eslint-config-prettier": "^10.1.1",
    "eslint-import-resolver-typescript": "^4.2.2",
    "eslint-plugin-import-x": "^4.9.0",
    "eslint-plugin-jsdoc": "^50.6.8",
    "eslint-plugin-prettier": "^5.2.3",
    "eslint-plugin-sonarjs": "^3.0.2",
    "eslint-plugin-sort-destructure-keys": "^2.0.0",
    "globals": "^16.0.0",
    "json": "^11.0.0",
    "prettier": "^3.5.3",
    "prettier-plugin-packagejson": "^2.5.10",
    "replace-in-file": "^8.3.0",
    "rimraf": "^6.0.1",
    "tsc-alias": "^1.8.11",
    "tsx": "^4.19.3",
    "typescript": "^5.8.2",
    "typescript-eslint": "^8.26.1",
    "vitest": "^3.0.9"
  }
}
